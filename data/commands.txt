mongoimport  -c timezones  --type json --file timezones.json --jsonArray

//to format the data
db.timezones.aggregate([
  // First zip the arrays together
  { $addFields: {
      timezonePairs: { 
        $zip: { 
          inputs: ["$TimeZones", "$WindowsTimeZones"],
          useLongestLength: false
        }
      }
    }
  },
  // Then unwind the paired array
  { $unwind: "$timezonePairs" },
  // Extract values from the pairs
  { $project: {
      _id: 0,
      IsoAlpha2: 1,
      IsoAlpha3: 1,
      CountryName: 1,
      Timezone: { $arrayElemAt: ["$timezonePairs", 0] },
      WindowsTimeZone: { $arrayElemAt: ["$timezonePairs", 1] }
    }
  },
  // Add city field
  { $addFields: {
      City: {
        $arrayElemAt: [
          { $split: ["$Timezone", "/"] },
          -1
        ]
      }
    }
  },
  { $out: "timezones" }
])

mongoexport -d flight_planner -c airports  --type json --out airports.json --jsonArray
mongoimport -d flight_planner -c airports  --type json --file airports.json --jsonArray

//to format data
db.airports.updateMany(
  {},
  [
    {
      $set: {
        name: {     $concat: [
            { $toUpper: { $substrCP: ["$name", 0, 1] } },
            { $toLower: { $substrCP: ["$name", 1, { $strLenCP: "$name" }] } }
          ] },
        
        city: {     $concat: [
            { $toUpper: { $substrCP: ["$city", 0, 1] } },
            { $toLower: { $substrCP: ["$city", 1, { $strLenCP: "$city" }] } }
          ]},
        country: {     $concat: [
            { $toUpper: { $substrCP: ["$country", 0, 1] } },
            { $toLower: { $substrCP: ["$country", 1, { $strLenCP: "$country" }] } }
          ] }
      }
    }
  ]
)

mongoimport --uri="mongodb://mongo:JSCDkXfvVYxuPjDdupJacxQJkRXUekXY@trolley.proxy.rlwy.net:52340/flight-planner?authSource=admin" -c countries  --type json --file countries.json --jsonArray


// db.timezones.aggregate([
//     {  $lookup:  {   from:'airports',
//                      foreignField:'city',
//                      localField:'City',
//                      as: 'airport',
//                      pipeline: [ { $project: {iata:1, _id:0, name:1}} ]
//     }},
//     {   $lookup: {  from:'countries',
//                     foreignField:'isoAlpha3',
//                     localField:'IsoAlpha3',
//                     as: 'currency',
//                     pipeline: [ { $project: {'currency.code':1, _id:0}}]
//     }},
//     {   $unwind: '$airport'},
//     {  $match: { "airport.name": { $regex: new RegExp(".*" + 'Singapore Changi' + ".*", "i")}}},
//     {   $unwind: '$currency'}
// ])